<?phpnamespace Home\Model;use Think\Model;class OutpayApplyModel extends Model {    protected $_validate = array(        array('title', 'require', '请填写标题！',self::MUST_VALIDATE),        array('content', 'require', '请填写内容！',self::MUST_VALIDATE),        array('class_id', 'require', '请选择班级！',self::MUST_VALIDATE),        array('money', 'require', '请填写所需支出金额！',self::MUST_VALIDATE),        array('member_id', 'require', '请传入申请人！',self::MUST_VALIDATE),        array('student_ids', 'require', '请传入扣费学生列表！',self::MUST_VALIDATE),    );    protected $_auto  =array(        array('addtime',NOW_TIME),    );    protected function _after_insert($data, $options) {        //判断金额是否能够除尽        $student_count=count(explode(',', $data['student_ids']));        if($data['money']*100 % $student_count !=0)        {            $tuijian= floor($data['money']*100/$student_count)/100*$student_count;            $this->error='总金额'.$data['money'] .'元不能平摊到受影响的学生'.$student_count.'人，推荐接近金额'.$tuijian.'元';            return false;        }                //发布成功后 给所有该办家委会发布系统通知消息        $Memssage   =   D('Message');        $mdata['class_id']=$data['class_id'];        $mdata['type']=1;//1系统消息              $mdata['group_id']=2;//通知所有纪委会        $mdata['title']='待审核'.($data['money']>0?'支出':'退款').'申请';         $mdata['content']='您有待审核的'.($data['money']>0?'支出':'退款').'申请，'.$data['title'].',需'.($data['money']>0?'支出':'退款').''.abs($data['money']).',请尽快前往处理';        if(false===$Memssage->create($mdata) || false===$Memssage->add())        {            $this->error=$Memssage->getError();            return false;        }        //推送微信消息        $WxMessage  =   new \Lib\Message();        $minfo=M('Member')->find($data['member_id']);        $parent_member_query=M()->table('__MEMBER__ m')                    ->join('__STUDENT__ s on s.phone=m.phone or s.phone2=m.phone','left')                    ->join('__PTA__ pta on find_in_set(pta.id,m.pta_id) and pta.class_id=s.class_id','left')                    ->where(array('pta.class_id'=>$data['class_id']))->field('m.id id')->select();                 $openids=array();        foreach ($parent_member_query as $member)        {            if(!empty($member['openid']))            {                $openids[]=$member['openid'];            }        }        foreach($openids as $openid)        {            if(!empty($openid))            {                $args['first']='您好，您有有待审核的'.($data['money']>0?'支出':'退款').'申请';                $args['keyword1']=$minfo['real_name'];                $args['keyword2']=$data['title'];                $args['keyword3']=date('Y年m月d日 H:i',NOW_TIME);                $args['remark']='您有有待审核的'.($data['money']>0?'支出':'退款').'申请，'.$data['title'].',需'.($data['money']>0?'支出':'退款').''.abs($data['money']).',请尽快前往处理';                $url=C('WEB_DOMAIN').JS_PROJECT_DIR.'/index.html#/tab_money.html?openid='.$openid.'&typename=6&typeid='.$data['class_id'];                  if(false===$WxMessage->send('OPENTM401320346', $args, $openid,$url))                {                }            }        }    }    protected function _after_select(&$resultSet, $options) {        foreach($resultSet as &$result)        {            if(false===$this->_after_find($result, $options))            {                return false;            }        }    }    protected function _after_find(&$result, $options) {        //查询出该班级有多少个家委会        $Pta    =   M('Pta');        //总投票个数        $result['pta_num']=$Pta->where(array('class_id'=>$result['class_id'],'can_toupiao'=>1))->count();        $Toupiao    =   M('Toupiao');        $map['app_id']=$result['id'];        //通过 不通过票数        $pass_info=$Toupiao->where($map)->field('sum(if(is_pass=1,1,0)) pass_num,count(if(is_pass=0,pta_id,null)) unpass_num')->group('app_id')->find();        $result['pass_info']=  empty($pass_info)?null:$pass_info;        $result['toupiao_info']=$Toupiao->where($map)->order('addtime desc')->select();        foreach($result['toupiao_info'] as &$toupiao_info)        {            $toupiao_info['minfo']=M('Member')->where(array('_string'=>'find_in_set('.$toupiao_info['pta_id'].',pta_id)'))->find();        }        $result['minfo']=D('Member')->find($result['member_id']);    }}