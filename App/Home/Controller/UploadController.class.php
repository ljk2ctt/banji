<?phpnamespace Home\Controller;class UploadController extends CommonController {    public function index() {        if (IS_POST) {            $upload = new \Think\Upload();            $upload->exts = array('jpg', 'gif', 'png', 'jpeg', 'pem'); // 设置附件上传类型            $upload->rootPath = './Uploads/'; // 设置附件上传根目录            $upload->savePath = 'images/'; // 设置附件上传（子）目录            $info = $upload->uploadOne($_FILES['myfile']);            if (!$info) {                $result = 0;                $msg = $upload->getError();            } else {                $msg = substr($upload->rootPath, 1) . $info['savepath'] . $info['savename'];                $result = 1;            }            $url = '';            if (in_array(strtolower($info['ext']), array('jpg', 'gif', 'png', 'jpeg'))) {                $url = 'cut';                if (1 == $result) {                    $image = new \Think\Image();                    $image->open('.' . $msg);                    $w = I('w', 0, 'intval');                    $h = I('h', 0, 'intval');                    if (empty($w) && empty($h)) {                        $image->thumb($image->width(), 9999)->save('.' . $msg);                    } else {                        $image->thumb($w, $h)->save('.' . $msg);                    }                }            }            sleep(1);            if (IS_AJAX) {                if (0 == $result) {                    $this->error($msg);                } else {                    $this->success($msg, $url);                }                return;            }            echo '<script type="text/javascript">window.parent.stopUpload(' . $result . ',"' . $msg . '");</script>';            return;        }        $this->assign('domid', I('get.domid'));        $this->assign('w', I('get.w'));        $this->assign('h', I('get.h'));        $this->display();    }    public function apiupload()    {        $upload = new \Think\Upload();        $upload->exts = array('jpg', 'gif', 'png', 'jpeg', 'pem','image/jpg'); // 设置附件上传类型        $upload->rootPath = './Uploads/'; // 设置附件上传根目录        $upload->savePath = 'images/'; // 设置附件上传（子）目录        $info = $upload->uploadOne($_FILES['myfile']);        if (!$info) {            $this->error($upload->getError(),'',true);        } else {            $this->success(substr($upload->rootPath, 1) . $info['savepath'] . $info['savename'],'',true);        }            }    public function preview()    {        $src=I('src');        if(empty($src))        {            $this->error('请传入地址');        }        $image = new \Think\Image();        $image->open('.' . $src);        $src_cut_thumb = str_replace('_cut.', '_cut_thumb.', $src);//        echo $src_cut_thumb;//        dump(is_file('.'.$src));        if(!is_file('.'.$src_cut_thumb))        {            $image->open('.'.$src);            $image->thumb(300,240)->save('.' . $src_cut_thumb);        }        header('Content-Type: image/jpeg');        echo file_get_contents('.'.$src);            }    public function cut() {        $data = I('data', '', '');        $json = json_decode($data, true);        if (!$json) {            $this->error('json错误');        }        $src = $json['src'];        $image = new \Think\Image();        $image->open('.' . $src);        $new_name = substr($src, 0, strpos($src, '.'));        $new_mite = substr($src, strpos($src, '.'));        $src_cut = $new_name . '_cut' . $new_mite;        $image->crop($json['w'], $json['h'], $json['x'], $json['y'])->save('.' . $src_cut);        $src_cut_thumb = $new_name . '_cut_thumb' . $new_mite;        $image->open('.'.$src_cut);        $image->thumb(300,240)->save('.' . $src_cut_thumb);        //$src_cut=C("WEB_DOMAIN").substr($src_cut, 1);        $this->success($src_cut);        unlink('.' . $src);    }    public function js() {        echo file_get_contents(DOC_ROOT . '/Public/Admin/js/cropper.min.js') . "\n";        echo <<<EOF    document.write('<div class="modal fade" id="previewModal" tabindex="-1" role="dialog" aria-labelledby="previewLabel"><div class="modal-dialog" role="document" style="width: 800px;top: 0;"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button><h4 class="modal-title" id="previewLabel">预览</h4></div><div class="modal-body has-modal"><img id="previewimg" src="" width="100%" /></div></div></div></div>');   $(document).on("click","[preview]",function(){          var preview=$(this).attr('preview');        var src=$("#"+preview).val();        $("#previewimg").attr('src', '           EOF;        echo U('Home/Upload/preview');echo <<<EOF?src='+src);        $("#previewModal").modal('show');       })                 var modal_html='<div class="modal fade" id="upload_modal" tabindex="-1" role="dialog" aria-labelledby="resetModalLabel"><div class="modal-dialog" role="document" style="width:1170px;"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button><h4 class="modal-title" id="resetModalLabel">上传</h4></div><div class="modal-body" style="overflow:hidden;"><form id="uploadform" enctype="multipart/form-data"><div class="form-group"><input type="file" class="form-control" name="myfile" id="file"></div><div class="container" style="display:none;"><div class="row"><div class="col-lg-8"><div class="img-container"><img></div></div><div class="col-lg-4"><div class="docs-preview clearfix"><div class="img-preview preview-lg"></div><input class="form-control" id="putData" type="hidden" placeholder="Get data to here or set data with this value"></div></div></div></div></form></div><div class="progress progress-striped modal-uploading" style="display:none;"><div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" id="progressbar" style="width: 0;"></div></div><div class="modal-footer"><button type="button" class="btn btn-default" data-dismiss="modal">返回</button><button type="button" class="btn btn-primary" style="display:none" id="uploadbutton">裁剪</button></div></div></div></div>';    var progressbarwidth=0,timer;    function myupload(doid,scale)    {        if(typeof(scale)=='undefined')        {            scale=5/4;        }        var upload_modal=$("#upload_modal");        if(upload_modal.length===0)        {            $("body").append(modal_html);        }        upload_modal=$("#upload_modal");        function modalDivMove(sr){            $('.container img').attr('src',sr);                    $('.container').css('display','block');            if(scale ==1){                $('.img-preview').addClass('preview-lgmd');            }            var _image = $('.img-container > img'),            _dataX = $('#putData'),            options = {                aspectRatio: scale,                preview: '.img-preview',                crop: function (data) {                    var Digit = {};                    Digit.round = function(digit, length) {                        length = length ? parseInt(length) : 0;                        if (length <= 0) return Math.round(digit);                        digit = Math.round(digit * Math.pow(10, length)) / Math.pow(10, length);                        return digit;                    };                    var _aa = '{"x":'+Math.round(data.x)+',"y":'+ Math.round(data.y) +',"h":'+ Math.round(data.height) +',"w":'+ Math.round(data.width)+',"src":"'+sr+'"}';                    _dataX.val(_aa);                }            }            _image.on({                'build.cropper': function (e) {                  console.log(e.type);                },                'built.cropper': function (e) {                  console.log(e.type);                },                'dragstart.cropper': function (e) {                  console.log(e.type, e.dragType);                },                'dragmove.cropper': function (e) {                  console.log(e.type, e.dragType);                },                'dragend.cropper': function (e) {                  console.log(e.type, e.dragType);                },                'zoomin.cropper': function (e) {                  console.log(e.type);                },                'zoomout.cropper': function (e) {                  console.log(e.type);                }            }).cropper(options);                       // Methods            $(document.body).on('click', '[data-method]', function () {                var data = $(this).data(),                    _target,                    result;                if (data.method) {                    data = $.extend({}, data); // Clone a new one                    if (typeof data.target !== 'undefined') {                        _target = $(data.target);                        if (typeof data.option === 'undefined') {                            try {                                data.option = JSON.parse(_target.val());                            } catch (e) {                                console.log(e.message);                            }                        }                    }                    result = _image.cropper(data.method, data.option);                    console.log(result);                    if (data.method === 'getCroppedCanvas') {                        $('#getCroppedCanvasModal').modal().find('.modal-body').html(result);                    }                    if ($.isPlainObject(result) && _target) {                        try {                            _target.val(JSON.stringify(result));                        } catch (e) {                            console.log(e.message);                        }                    }                }            }).on('keydown', function (e) {                switch (e.which) {                    case 37:                        e.preventDefault();                        _image.cropper('move', -1, 0);                        break;                    case 38:                        e.preventDefault();                        _image.cropper('move', 0, -1);                        break;                    case 39:                        e.preventDefault();                        _image.cropper('move', 1, 0);                        break;                    case 40:                        e.preventDefault();                        _image.cropper('move', 0, 1);                        break;                }            });            // Options            $('.docs-options :checkbox').on('change', function () {                var _this = $(this);                options[_this.val()] = _this.prop('checked');                _image.cropper('destroy').cropper(options);            });            // Tooltips            $('[data-toggle="tooltip"]').tooltip();        }        $("#upload_modal").modal('show');        $('#file').change(function(){            $(".modal-body").hide(500);            $(".modal-uploading").show();            $('.modal-fileBig').css('display','block')            $('.modal-fileSmall').css('display','block')            timer = setInterval(function(){ $("#progressbar").css({width:progressbarwidth+'%'});progressbarwidth=progressbarwidth+5; if(progressbarwidth==100)progressbarwidth=0; },'200');            var formData = new FormData($( "#uploadform" )[0]); EOF;        echo '$.ajax({url : "' . U('Home/Upload/index') . '",';        echo <<<EOF            type : 'POST',             data : formData,             processData : false,             contentType : false,             success : function(data) {                clearInterval(timer);                $(".modal-uploading").hide();                $(".modal-body").show(500);                if(data.status==0)                {                  alert(data.info);                      return false;                }                if(data.url=='cut')                {                    $("#uploadbutton").show();                    modalDivMove(data.info);                    var imgTimer = setInterval(function(){                        $(".modal-back").css('height',$('.modal-fileBigImg').height());                        $(".modal-fileDivImg").css({                            'height':$('.modal-fileBigImg').height(),                            'width':$('.modal-fileBigImg').width()                        });                        $(".modal-fileBig").css({                            'height':$('.modal-fileBigImg').height()                        });                        });                }                else                {                    $("#"+doid).val(data.info);                    $(".modal-backdrop").remove();                    $("#upload_modal").remove();                }            },             error : function() {               clearInterval(timer);            },            dataType:'json'          });         });        $("#uploadbutton").click(function(){            var cutdata=$("#putData").val();        EOF;        echo '$.post("' . U('Home/Upload/cut') . '",';        echo <<<EOF                {data:cutdata},function(data){                    if(data.status!=1)                    {                        alert(data.info);                        return false;                    }                    $("#"+doid).val(data.info);                    $(".modal-backdrop").remove();                    $("#upload_modal").remove();              var chars = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];                          var i=Math.floor(Math.random()*26)         var ii=Math.floor(Math.random()*26)         var iii=Math.floor(Math.random()*26)         var iiii=Math.floor(Math.random()*26)         var iiiii=Math.floor(Math.random()*26)        var num=chars[i]+chars[ii]+chars[iii]+chars[iiii]+chars[iiiii];                 $("#shangchuan").attr("oo",num);           var hh=' <input type="text" class="form-control pull-left pushList-image" name="pics[]" id="'+num+'"><input type="button" value="预览" class="btn btn-default" preview="'+num+'"/><span class="schu">X</span>';               $("#inputbox").append(hh);                    return false;                },"json");        });    }EOF;    }}